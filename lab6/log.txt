Konner Macias | 004603916
Lab 6 - Multithreaded Performance
TA: Shenkar
==============================
$ sort --version

sort (GNU coreutils) 8.29

This is the latest version
==============================
Generate file with 10M random single-precision flting pt nums

$ od -An -t fF -N 40000000 < /dev/urandom | tr -s [:blank:] '\n' | sed '/^$/d' > huge.txt

Every single precision float is 4 bytes so we need 40MB
==============================
Time our performance.

$ time -p sort -g huge.txt > /dev/null
real 21.53
user 115.94
sys 0.45
==============================
1 Thread

$ time -p sort -g --parallel=1 huge.txt > /dev/null
real 114.06
user 113.75
sys 0.31
==============================
2 Threads

$ time -p sort -g --parallel=2 huge.txt > /dev/null
real 59.41
user 112.95
sys 0.26
==============================
4 Threads

$ time -p sort -g --parallel=4 huge.txt > /dev/null
real 33.93
user 113.52
sys 0.32
==============================
8 Threads

$ time -p sort -g --parallel=8 huge.txt > /dev/null
real 21.53
user 114.55
sys 0.47
